<?php
// @formatter:off
/** @var $_block \app\models\core\Chart\Line */

$chartId = $id;
$chartVar = 'chart_' . $chartId;
?>

<div id="<?= $chartId ?>" class="chart <?= $class ?> <?= $type ?>">
    <div class="chart-heading">
        <h2 class="chart-title"><?= $this->__($title) ?></h2>
    </div>
    <div class="chart-body">
        <div class="toolbar">
            <form action="javascript:void(0)" id="<?= $chartId ?>_form">
                <ul>
                    <?php foreach ($filters as $filterElement): /* @var $filterElement \app\models\core\Form\Element\AbstractElement */ ?>
                        <li>
                            <span class="filter-label"><?= $this->__($filterElement->getLabel()) ?></span>
                            <div class="filter-input">
                                <?= $filterElement->toHtml() ?>
                            </div>
                        </li>
                    <?php endforeach; ?>
                </ul>
            </form>
        </div>
        <?php if ($show_legend): ?>
            <div id="<?= $chartId ?>-legend-container" class="legend"></div>
        <?php endif; ?>

        <div class="canvas-container">
            <canvas width="<?= $width ?>" height="<?= $height ?>"></canvas>
        </div>

        <script>
            window.addEventListener('DOMContentLoaded', function() {
                (function($) {
                    //<![CDATA[
                    <?php if ($show_legend): ?>
                    const getOrCreateLegendList = (chart, id) => {
                        const legendContainer = document.getElementById(id);
                        let listContainer = legendContainer.querySelector('ul');

                        if (!listContainer) {
                            listContainer = document.createElement('ul');
                            listContainer.className = 'line-legend';

                            legendContainer.appendChild(listContainer);
                        }

                        return listContainer;
                    };

                    const htmlLegendPlugin = {
                        id: 'htmlLegend',
                        afterUpdate(chart, args, options) {
                            const ul = getOrCreateLegendList(chart, options.containerID);

                            // Remove old legend items
                            while (ul.firstChild) {
                                ul.firstChild.remove();
                            }

                            // Reuse the built-in legendItems generator
                            const items = chart.options.plugins.legend.labels.generateLabels(chart);

                            items.forEach(item => {
                                const li = document.createElement('li');
                                li.style.cursor = 'pointer';

                                li.onclick = () => {
                                    const {type} = chart.config;
                                    if (type === 'pie' || type === 'doughnut') {
                                        // Pie and doughnut charts only have a single dataset and visibility is per item
                                        chart.toggleDataVisibility(item.index);
                                    } else {
                                        chart.setDatasetVisibility(item.datasetIndex, !chart.isDatasetVisible(item.datasetIndex));
                                    }
                                    chart.update();
                                };

                                // Color box
                                const boxSpan = document.createElement('span');
                                boxSpan.style.background = item.fillStyle;
                                boxSpan.style.borderColor = item.strokeStyle;
                                boxSpan.style.borderWidth = item.lineWidth + 'px';
                                boxSpan.style.display = 'inline-block';
                                boxSpan.style.flexShrink = 0;
                                boxSpan.style.height = '20px';
                                boxSpan.style.marginRight = '10px';
                                boxSpan.style.width = '20px';
                                boxSpan.className = 'label-color';

                                // Text
                                const textContainer = document.createElement('span');
                                textContainer.style.color = item.fontColor;
                                textContainer.style.margin = 0;
                                textContainer.style.padding = 0;
                                textContainer.style.textDecoration = item.hidden ? 'line-through' : '';
                                textContainer.className = 'label-text';

                                const text = document.createTextNode(item.text);
                                textContainer.appendChild(text);

                                li.appendChild(boxSpan);
                                li.appendChild(textContainer);
                                ul.appendChild(li);
                            });
                        }
                    };
                    <?php endif; ?>

                    const chart = new Chart($('#<?= $chartId ?> canvas').get(0), {
                        type: 'line',
                        options: {
                            responsive: true,
                            animation: false,
                            plugins: {
                                htmlLegend: {
                                    containerID: '<?= $chartId ?>-legend-container',
                                },
                                legend: {
                                    display: <?= $show_legend ? 'true' : 'false' ?>,
                                },
                                tooltip: {
                                    enabled: true,
                                    usePointStyle: true,
                                    callbacks: {
                                        title: (data) => data[0].dataset.label,
                                        label: (data) => <?= $_block->getTooltipJsCallback('data.parsed.y') ?>,
                                    },
                                },
                            },
                            scales: {
                                x: {
                                    type: 'time',
                                    time: {
                                        unit: 'week',
                                        isoWeekday: true,
                                    }
                                },
                            }
                        },
                        <?php if ($show_legend): ?>
                        plugins: [htmlLegendPlugin],
                        <?php endif; ?>
                    });

                    const updateChart = function() {
                        var filters = $('#<?= $chartId ?>_form').serialize();
                        $.getJSON("<?= $data_url ?>", filters, function(data) {
                            $('#<?= $chartId ?> .no-data-message').remove();
                            if (data == null || !data.datasets?.length) {
                                if (typeof chart != "undefined") {
                                    chart.clear();
                                }
                                $('#<?= $chartId ?> canvas').after('<div class="no-data-message"><?= $this->__($no_data_message); ?></div>');
                                return;
                            } else {
                                console.debug('Line chart data', data);
                                whbChartjs.populateChartWithData(chart, data);
                            }
                        });
                    }

                    $(window).load(function() {
                        updateChart();
                        $('#<?= $chartId ?> .toolbar select').change(updateChart);
                    });
                })(jQuery);
            });
            //]]>
        </script>
        <div class="clear"></div>
        <?php if ($footer_note): ?>
            <div class="chart-footer right">
                <p><?= $footer_note ?></p>
            </div>
        <?php endif; ?>
    </div>
</div>
